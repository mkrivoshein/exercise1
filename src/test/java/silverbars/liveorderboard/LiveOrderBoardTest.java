/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package silverbars.liveorderboard;

import org.junit.jupiter.api.Test;
import silverbars.liveorderboard.order.Order;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.is;
import static org.hamcrest.Matchers.sameInstance;
import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

public class LiveOrderBoardTest {
    private final LiveOrderBoard liveOrderBoard = new LiveOrderBoard();

    @Test
    public void registerNewOrder() {
        // prepare
        Order mockOrder = mock(Order.class);

        // execute
        boolean result = liveOrderBoard.registerOrder(mockOrder);

        // verify
        assertThat(result, is(true));
    }

    @Test
    public void cancelExistingOrder() {
        // prepare
        Order mockOrder = mock(Order.class);
        liveOrderBoard.registerOrder(mockOrder);

        // execute
        boolean result = liveOrderBoard.cancelOrder(mockOrder);

        // verify
        assertThat(result, is(true));
    }

    @Test
    public void summaryInformation() {
        // prepare
        LiveOrderBoardSummaryInformation summaryInformation = mock(LiveOrderBoardSummaryInformation.class);

        SummaryInformationFunction summaryInformationFunction = mock(SummaryInformationFunction.class);
        when(summaryInformationFunction.apply(any(LiveOrderBoardState.class))).thenReturn(summaryInformation);

        LiveOrderBoard liveOrderBoard = new LiveOrderBoard(summaryInformationFunction);

        // execute
        LiveOrderBoardSummaryInformation result = liveOrderBoard.getSummaryInformation();

        // verify
        assertThat(result, is(sameInstance(summaryInformation)));
    }
}
